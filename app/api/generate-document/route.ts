import { type NextRequest, NextResponse } from "next/server"

export async function POST(request: NextRequest) {
  try {
    const { content, format, filename } = await request.json()

    console.log("üìÑ Generating document:", format)

    if (format === "pdf") {
      // For PDF, we'll create an HTML document that can be printed as PDF
      const pdfContent = `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MSASCOUT Investment Report</title>
    <style>
        body { 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
            margin: 0; 
            padding: 40px; 
            background: white; 
            color: #333;
            line-height: 1.6;
        }
        .header { 
            text-align: center; 
            border-bottom: 3px solid #2563eb; 
            padding-bottom: 20px; 
            margin-bottom: 30px; 
        }
        .header h1 { 
            color: #2563eb; 
            font-size: 2.5em; 
            margin: 0; 
        }
        .header p { 
            color: #666; 
            font-size: 1.1em; 
            margin: 10px 0 0 0; 
        }
        .content { 
            max-width: 800px; 
            margin: 0 auto; 
        }
        h2 { 
            color: #1e40af; 
            font-size: 1.8em; 
            margin: 30px 0 15px 0; 
            border-left: 5px solid #3b82f6; 
            padding-left: 15px; 
        }
        h3 { 
            color: #1d4ed8; 
            font-size: 1.4em; 
            margin: 25px 0 10px 0; 
        }
        p, li { 
            font-size: 1em; 
            margin: 10px 0; 
        }
        ul { 
            padding-left: 25px; 
        }
        .highlight { 
            background: #dbeafe; 
            padding: 15px; 
            border-left: 4px solid #3b82f6; 
            margin: 20px 0; 
            border-radius: 4px; 
        }
        .footer { 
            text-align: center; 
            margin-top: 50px; 
            padding-top: 20px; 
            border-top: 1px solid #e5e7eb; 
            color: #666; 
            font-size: 0.9em; 
        }
        @media print { 
            body { margin: 0; padding: 20px; }
            .header { page-break-after: avoid; }
            h2 { page-break-after: avoid; }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>MSASCOUT Investment Report</h1>
        <p>Generated on ${new Date().toLocaleDateString()}</p>
    </div>
    <div class="content">
        ${content}
    </div>
    <div class="footer">
        <p>Generated by MSASCOUT AI Investment Agent</p>
        <p>This report is for informational purposes only and should not be considered as financial advice.</p>
    </div>
</body>
</html>
      `

      return NextResponse.json({
        action: "download_document",
        content: pdfContent,
        filename: filename.replace(".doc", ".html"),
        message: "PDF report generated successfully! Click to download (you can print as PDF from your browser).",
      })
    }

    if (format === "docx") {
      // For DOCX, we'll create a rich HTML document
      const docxContent = `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MSASCOUT Investment Report</title>
    <style>
        body { 
            font-family: 'Times New Roman', serif; 
            margin: 0; 
            padding: 40px; 
            background: white; 
            color: #000;
            line-height: 1.8;
            font-size: 12pt;
        }
        .header { 
            text-align: center; 
            border-bottom: 2px solid #000; 
            padding-bottom: 20px; 
            margin-bottom: 30px; 
        }
        .header h1 { 
            color: #000; 
            font-size: 24pt; 
            margin: 0; 
            font-weight: bold;
        }
        .header p { 
            color: #333; 
            font-size: 12pt; 
            margin: 10px 0 0 0; 
        }
        .content { 
            max-width: 100%; 
        }
        h2 { 
            color: #000; 
            font-size: 16pt; 
            margin: 30px 0 15px 0; 
            font-weight: bold;
            text-decoration: underline;
        }
        h3 { 
            color: #000; 
            font-size: 14pt; 
            margin: 25px 0 10px 0; 
            font-weight: bold;
        }
        p, li { 
            font-size: 12pt; 
            margin: 10px 0; 
        }
        ul { 
            padding-left: 25px; 
        }
        .highlight { 
            background: #f0f0f0; 
            padding: 15px; 
            border: 1px solid #ccc; 
            margin: 20px 0; 
        }
        .footer { 
            text-align: center; 
            margin-top: 50px; 
            padding-top: 20px; 
            border-top: 1px solid #000; 
            font-size: 10pt; 
        }
        table { 
            border-collapse: collapse; 
            width: 100%; 
            margin: 20px 0; 
        }
        th, td { 
            border: 1px solid #000; 
            padding: 8px; 
            text-align: left; 
        }
        th { 
            background-color: #f0f0f0; 
            font-weight: bold; 
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>MSASCOUT Investment Report</h1>
        <p>Generated on ${new Date().toLocaleDateString()}</p>
    </div>
    <div class="content">
        ${content}
    </div>
    <div class="footer">
        <p>Generated by MSASCOUT AI Investment Agent</p>
        <p>This report is for informational purposes only and should not be considered as financial advice.</p>
    </div>
</body>
</html>
      `

      return NextResponse.json({
        action: "download_document",
        content: docxContent,
        filename: filename.replace(".doc", ".html"),
        message: "DOCX report generated successfully! Click to download (save as .doc to open in Word).",
      })
    }

    return NextResponse.json({ error: "Invalid format specified" }, { status: 400 })
  } catch (error) {
    console.error("‚ùå Error generating document:", error)
    return NextResponse.json({ error: "Failed to generate document" }, { status: 500 })
  }
}
